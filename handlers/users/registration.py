from aiogram import types
from aiogram.dispatcher.filters import Text

from keyboards.inline.check_sub import check, channel
from keyboards.inline.finish import finish_registration
import utils.db_api.commands.participants as ps
from loader import dp
import utils.check_member as ch
from utils.db_api.commands.raffles import select_amount, select_date


async def registration_on_raffle(message: types.Message, deep_link):
    global creator_id
    creator_id = deep_link
    await message.answer('üë®‚Äçüîß –î–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ, <b>–í–∞–º</b> –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ:\n'
                         '<b><i>- –±—ã—Ç—å –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–º –Ω–∞—à–µ–≥–æ –∫–∞–Ω–∞–ª–∞,</i></b>\n'
                         '<b><i>- —è–≤–ª—è—Ç—å—Å—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–º –Ω–∞—à–µ–≥–æ —á–∞—Ç–∞.</i></b>\n', reply_markup=check)


# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ —á–∞—Ç –∏ –∫–∞–Ω–∞–ª
@dp.callback_query_handler(Text(startswith='checking_subscribe'))
async def checking_subscribe(call: types.CallbackQuery):
    check_sub = await ch.check_member_channel(user_id=call.from_user.id)
    if check_sub is True:

        await call.answer('–í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –ß–∞—Ç –∏ –ö–∞–Ω–∞–ª!', show_alert=True)
        await continue_registration(call=call)
    else:
        await call.answer('–í—ã –Ω–µ –≤—ã–ø–æ–ª–Ω–∏–ª–∏ —É—Å–ª–æ–≤–∏–µ', show_alert=True)


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
async def continue_registration(call: types.CallbackQuery):
    amount = await select_amount(telegram_id=creator_id)
    await call.message.edit_text('üë®‚Äçüîß –ï—Å–ª–∏ <b>–≤—ã</b> —Å—Ç–∞–ª–∏ <b>–ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–º</b>, '
                                 f'—Ç–æ –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å —á–µ–∫ –Ω–∞ —Å—É–º–º—É {amount} —Ä—É–±–ª–µ–π <b>–≤ –Ω–∞—à–µ–º –º–∞–≥–∞–∑–∏–Ω–µ.</b>',
                                 reply_markup=finish_registration)


# –ö–Ω–æ–ø–∫–∞ –¥–ª—è –ó–∞–≤–µ—Ä—à–µ–Ω–∏—è –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
@dp.callback_query_handler(Text(equals='finish'))
async def finish_reg(call: types.CallbackQuery):
    await ps.add_participant(telegram_id=call.from_user.id, username=f'@{call.from_user.username}')
    data = await select_date(telegram_id=creator_id)
    await call.message.edit_text('üë®‚Äçüîß –í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–∏–ª–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é.\n'
                                 f'–í–∞—à ID: <b>{call.from_user.id}</b>\n'
                                 f'–í–∞—à Username: <b>@{call.from_user.username}</b>\n\n'
                                 f'–ò—Ç–æ–≥–∏ –±—É–¥—É—Ç –∏–∑–≤–µ—Å—Ç–Ω—ã - {data}\n'
                                 f'–°–ª–µ–¥–∏ –∑–∞ –Ω–æ–≤–æ—Å—Ç—è–º–∏ –≤ –Ω–∞—à–µ–º –∫–∞–Ω–∞–ª–µ',
                                 reply_markup=channel)
